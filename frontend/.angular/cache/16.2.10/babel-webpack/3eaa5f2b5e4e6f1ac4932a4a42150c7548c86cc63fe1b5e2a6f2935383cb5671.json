{"ast":null,"code":"import { inject } from '@angular/core';\nimport { BehaviorSubject, map } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { enviroment } from \"../enviroment/enviroment\";\nimport * as i0 from \"@angular/core\";\nexport class PlayerService {\n  setSelectedPlayer(playerName) {\n    this.selectedPlayerSubject.next(playerName);\n  }\n  getSelectedPlayer() {\n    return this.selectedPlayerSubject.asObservable();\n  }\n  getPlayersDetails(playerName) {\n    return this.http.get(this.apiSoccerUrl + '/searchplayers.php?p=' + playerName).pipe(map(response => response.player));\n  }\n  constructor() {\n    this.selectedPlayerSubject = new BehaviorSubject('');\n    this.http = inject(HttpClient);\n    this.apiSoccerUrl = enviroment.soccerApiUrl;\n    this.selectedPlayer$ = this.selectedPlayerSubject.asObservable();\n  }\n  static #_ = this.ɵfac = function PlayerService_Factory(t) {\n    return new (t || PlayerService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlayerService,\n    factory: PlayerService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","BehaviorSubject","map","HttpClient","enviroment","PlayerService","setSelectedPlayer","playerName","selectedPlayerSubject","next","getSelectedPlayer","asObservable","getPlayersDetails","http","get","apiSoccerUrl","pipe","response","player","constructor","soccerApiUrl","selectedPlayer$","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/puurkos/Desktop/ANGULAR/scoreboardprov2/frontend/src/app/services/player.service.ts"],"sourcesContent":["import {inject, Injectable} from '@angular/core';\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {enviroment} from \"../enviroment/enviroment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  private selectedPlayerSubject = new BehaviorSubject<string>('');\n  private http = inject(HttpClient)\n  readonly apiSoccerUrl = enviroment.soccerApiUrl;\n  selectedPlayer$: Observable<string> = this.selectedPlayerSubject.asObservable()\n  setSelectedPlayer(playerName: string): void {\n    this.selectedPlayerSubject.next(playerName);\n  }\n  getSelectedPlayer():Observable<string> {\n    return this.selectedPlayerSubject.asObservable()\n  }\n  getPlayersDetails(playerName:string):Observable<Object> {\n    return this.http.get<Object>(this.apiSoccerUrl + '/searchplayers.php?p='+playerName).pipe(\n        map(response => response.player),\n\n    );\n  }\n  constructor() { }\n}\n"],"mappings":"AAAA,SAAQA,MAAM,QAAmB,eAAe;AAChD,SAAQC,eAAe,EAAEC,GAAG,QAAmB,MAAM;AACrD,SAAQC,UAAU,QAAO,sBAAsB;AAC/C,SAAQC,UAAU,QAAO,0BAA0B;;AAKnD,OAAM,MAAOC,aAAa;EAKxBC,iBAAiBA,CAACC,UAAkB;IAClC,IAAI,CAACC,qBAAqB,CAACC,IAAI,CAACF,UAAU,CAAC;EAC7C;EACAG,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACF,qBAAqB,CAACG,YAAY,EAAE;EAClD;EACAC,iBAAiBA,CAACL,UAAiB;IACjC,OAAO,IAAI,CAACM,IAAI,CAACC,GAAG,CAAS,IAAI,CAACC,YAAY,GAAG,uBAAuB,GAACR,UAAU,CAAC,CAACS,IAAI,CACrFd,GAAG,CAACe,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAEnC;EACH;EACAC,YAAA;IAhBQ,KAAAX,qBAAqB,GAAG,IAAIP,eAAe,CAAS,EAAE,CAAC;IACvD,KAAAY,IAAI,GAAGb,MAAM,CAACG,UAAU,CAAC;IACxB,KAAAY,YAAY,GAAGX,UAAU,CAACgB,YAAY;IAC/C,KAAAC,eAAe,GAAuB,IAAI,CAACb,qBAAqB,CAACG,YAAY,EAAE;EAa/D;EAAC,QAAAW,CAAA,G;qBAjBNjB,aAAa;EAAA;EAAA,QAAAkB,EAAA,G;WAAblB,aAAa;IAAAmB,OAAA,EAAbnB,aAAa,CAAAoB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}